name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }} 
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 20
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v3
          if: always()
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v3

          - name: Setup NodeJS Version
            uses: actions/setup-node@v3
            with:
              node-version: 18

          - name: Install Dependencies
            run: npm install

          - name: Code coverage
            continue-on-error: true
    docker:
        name: Containerization
        permissions:
          packages: write
        environment: 
          name: dev
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repo
          uses: actions/checkout@v4

        - name: Dockerhub Login
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
        - name: GHCR Login
          uses: docker/login-action@v2.2.0
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}
        
        - name: Docker Build For Testing
          uses: docker/build-push-action@v6
          with:
            context: . # path of the Dockerfile
            push: false #if false only build the image
            tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }} #github.sha use commit id as tag version
        
        - name: Docker Image Testing
          run: |
            docker images
            docker run --name solar-system-app -d  \
                  -p 3000:3000 \
                  -e MONGO_URI=$MONGO_URI \
                  -e MONGO_USERNAME=$MONGO_USERNAME \
                  -e MONGO_PASSWORD=$MONGO_PASSWORD \
                  ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
              
            export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
            echo $IP
              
            echo Testing Image URL using wget 
            wget -q -O - 127.0.0.1:3000/live | grep live        
    dev-deploy:
      needs: docker
      runs-on: ubuntu-latest
      environment:
        name: development
      steps:
        - uses: actions/checkout@v4
        - uses: azure/setup-kubectl@v3
          with:
            version: v1.26.0
        - uses: azure/k8s-set-context@v3
          with:
            method: kubeconfig
            kubeconfig: '${{ secrets.KUBECONFIG }}'
        - run: kubectl version --short -o yaml
